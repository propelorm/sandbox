{"version":3,"sources":["@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/0","/vagrant/src/PropelSandbox/Resources/angular","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/7","/vagrant/src/PropelSandbox/Resources/controller/MainController","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/6","/vagrant/src/PropelSandbox/Resources/examples","/vagrant/src/PropelSandbox/Resources/filters/toArray","@traceur/generated/TemplateParser/10","/vagrant/src/PropelSandbox/Resources/app","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/12"],"names":[],"mappings":"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","sourceRoot":"/vagrant/src/PropelSandbox/Resources/public/","sourcesContent":["System.register($__placeholder__0, [], $__placeholder__1);","function() {\n      $__placeholder__0\n    }","var __moduleName = $__placeholder__0;","var $__default = $__placeholder__0","export default window.angular;","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","var $__placeholder__0 = $__placeholder__1","export default class MainController {\n\n    constructor($scope, $http, $routeParams, $q, $rootScope, $location, EXAMPLES) {\n        this.scope = $scope;\n        this.http = $http;\n        this.q = $q;\n        this.location = $location;\n        this.scope.examples = this.EXAMPLES = EXAMPLES;\n\n        this.defaultModel = {\n            php: 'echo \"Hello World\";',\n            schema: '<database name=\"default\">\\n' +\n            '\\n' +\n            '\\n</database>'\n        };\n\n        this.scope.fiddle = false;\n        this.scope.pageTitle = '';\n        this.scope.editable = false;\n\n        this.scope.$watch('editable', (value) => {\n            this.scope.phpCodemirrorOptions.readOnly = !value;\n            this.scope.schemaCodemirrorOptions.readOnly = !value;\n        });\n\n        $rootScope.$on(\"$routeChangeSuccess\", (event, current) => {\n            if ($routeParams.exampleId) {\n                this.loadExample($routeParams.exampleId);\n            } else {\n                this.loadFiddle($routeParams.fiddleId);\n            }\n        });\n\n        this.scope.model = {};\n\n        this.scope.schemaCodemirrorOptions = {\n            mode: 'xml',\n            lineNumbers: true,\n            styleActiveLine: true,\n            readOnly: !this.editable\n        };\n\n        this.scope.phpCodemirrorOptions = {\n            mode: 'application/x-httpd-php-open',\n            matchBrackets: true,\n            styleActiveLine: true,\n            lineNumbers: true,\n            readOnly: !this.editable\n        };\n\n        this.scope.$watch('example', (v) => this.openExample(v));\n\n        this.scope.$watch('model.title', (value) => {\n            if (value) {\n                this.scope.pageTitle = value + ' - ';\n            } else {\n                this.scope.pageTitle = '';\n            }\n        });\n\n        this.loadMyFiddles();\n    }\n\n    openFiddle(id) {\n        this.open('/' + id);\n    }\n\n    loadMyFiddles(){\n        this.http.get(window._baseUrl + '/my-fiddles')\n            .success((response) => {\n                this.scope.myFiddles = response.data;\n            })\n            .error((response) => {\n                this.scope.myFiddles = [];\n            });\n    }\n\n    loadFiddle(fiddleId) {\n        delete this.scope.notFound;\n        if (fiddleId && this.fiddleId === fiddleId) {\n            return; //don't reload it\n        }\n        this.fiddleId = fiddleId;\n        this.scope.example = '';\n        if (fiddleId) {\n            this.http.get(window._baseUrl + '/' + fiddleId+'.json')\n                .success((response) => {\n                    this.scope.fiddle = response.data;\n                    this.scope.model = {\n                        php: this.scope.fiddle.php,\n                        title: this.scope.fiddle.title,\n                        schema: this.scope.fiddle.schema\n                    };\n                    this.scope.editable = this.scope.fiddle.editable;\n                })\n                .error((response) => {\n                    delete this.fiddleId;\n                    this.scope.notFound = fiddleId;\n                });\n        } else {\n            this.loadNew();\n        }\n    }\n\n    loadNew() {\n        delete this.scope.notFound;\n        this.fiddleId = null;\n        this.scope.example = '';\n        this.scope.model = this.defaultModel;\n        this.scope.editable = true;\n    }\n\n    newFiddle() {\n        this.scope.example = '';\n        this.open('/');\n    }\n\n    forkFiddle() {\n        this.scope.forking = true;\n        var promise = this.retrieveNewFiddleId();\n\n        promise.success(() =>  {\n            if (!this.scope.model.title) this.scope.model.title = '';\n            this.scope.model.title += ' Fork';\n            this.run();\n            this.scope.forking = false;\n        }).error(() => {\n            this.scope.forking = false;\n        });\n\n        return promise;\n    }\n\n    openExample(exampleId) {\n        if (!exampleId) return;\n        this.open('/example/' + exampleId);\n    }\n\n    downloadFiddle() {\n        if (!this.fiddleId && !this.scope.example) {\n            //no fiddle or a example has ben loaded\n            return;\n        }\n\n        this.scope.downloadZip = true; //show dialog\n        this.scope.downloadingZip = true; //indicate we're loading now everything\n\n        this.downloadZipCanceller = this.q.defer();\n\n        if (!this.fiddleId && this.scope.example) {\n            console.log('it is a example, run first');\n            //its a example, we need to run it first. run() forks it already\n            this.run()\n                .then(() => this.downloadFiddle())\n                .catch(() => {\n                    this.scope.downloadingZip = false;\n                    this.scope.downloadZipError = 'Could not fork the fiddle';\n                });\n            return;\n        }\n        if (this.fiddleId && this.fiddle && !this.fiddle.editable) {\n            console.log('not editable');\n            //we need to fork it first\n            this.forkFiddle()\n                .then(() => this.downloadFiddle())\n                .catch(() => {\n                    this.scope.downloadingZip = false;\n                    this.scope.downloadZipError = 'Could not fork the fiddle';\n                });\n            return;\n        }\n\n        if (this.fiddleId && !this.scope.fiddle) {\n            console.log('not run yet');\n            //we need to save&run first\n            this.run()\n                .then(() => this.downloadFiddle())\n                .catch(() => {\n                    this.scope.downloadingZip = false;\n                    this.scope.downloadZipError = 'Could not run the fiddle';\n                });\n            return;\n        }\n\n        this.http.post(window._baseUrl + '/prepare-download/' + this.fiddleId, {\n            timeout: this.downloadZipCanceller.promise\n        }).success((response) => {\n            this.scope.zipFileName = response.data.name;\n            this.scope.zipFileSize = response.data.size;\n            this.scope.downloadingZip = false;\n        }).error((response) => {\n            this.scope.downloadingZip = false;\n            this.scope.downloadZipError = 'Could not download zip file';\n        })\n    }\n\n    cancelDownloadZip() {\n        this.scope.downloadZip = false;\n        this.downloadZipCanceller.resolve(); //cancel running download request\n    }\n\n    downloadPossible() {\n        return this.fiddleId || this.scope.example;\n    }\n\n    loadExample(exampleId) {\n        var example = this.EXAMPLES[exampleId];\n        if (example) {\n            this.scope.example = exampleId;\n            this.scope.fiddle = false;\n\n            this.fiddleId = null;\n            this.scope.model = {\n                title: example.label,\n                php: example.php,\n                schema: example.schema\n            };\n            this.scope.editable = true;\n        }\n    }\n\n    open(path) {\n        this.location.path(window._baseUrl + path);\n    }\n\n    retrieveNewFiddleId(){\n        this.scope.loading = true;\n\n        var promise = this.http.put(window._baseUrl + '/');\n        promise.success((response) => {\n            if (response.data) {\n                this.fiddleId = response.data;\n                this.scope.example = '';\n                this.open('/' + this.fiddleId);\n                this.scope.loading = false;\n                this.scope.editable = true;\n            }\n        });\n\n        return promise;\n    }\n\n    run() {\n        var data = this.scope.model;\n\n        if (!this.scope.editable) {\n            return;\n        }\n\n        this.scope.loading = true;\n        this.scope.saving = true;\n\n        if (!this.fiddleId) {\n            var q = this.q.defer();\n            this.retrieveNewFiddleId().success(() => {\n                this.run()\n                    .success((v) => q.resolve(v))\n                    .error((v) => q.reject(v))\n            }).error(() => q.reject());\n            return q.promise;\n        }\n\n        var promise = this.http.post(window._baseUrl + '/' + this.fiddleId, data);\n        promise.success((response) => {\n                this.scope.fiddle = response.data;\n                this.scope.loading = false;\n                this.scope.saving = false;\n                this.loadMyFiddles();\n            })\n            .error((response) => {\n                this.scope.error = response;\n                this.scope.loading = false;\n                this.scope.saving = false;\n            });\n\n        return promise;\n    }\n}","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","var $__default = $__placeholder__0","var examples = {};\n\n\nexamples.bookstore = {\n    label: 'Simple Bookstore',\n    php: `$book = new Book();\n$book->setTitle('My Heros');\n$book->setIsbn('123154');\n\n$author = new Author();\n$author->setFirstName('Hans');\n$author->setLastName('Zimmer');\n\n$book->setAuthor($author);\n$book->save();\n\nvar_dump($book->toArray());`,\n    schema: `<database name=\"default\">\n  <table name=\"book\">\n    <column name=\"id\" type=\"integer\" required=\"true\" primaryKey=\"true\" autoIncrement=\"true\"/>\n    <column name=\"title\" type=\"varchar\" size=\"255\" required=\"true\" />\n    <column name=\"isbn\" type=\"varchar\" size=\"24\" required=\"true\" phpName=\"ISBN\"/>\n    <column name=\"author_id\" type=\"integer\" required=\"true\"/>\n    <foreign-key foreignTable=\"author\">\n      <reference local=\"author_id\" foreign=\"id\"/>\n    </foreign-key>\n  </table>\n  <table name=\"author\">\n    <column name=\"id\" type=\"integer\" required=\"true\" primaryKey=\"true\" autoIncrement=\"true\"/>\n    <column name=\"first_name\" type=\"varchar\" size=\"128\" required=\"true\"/>\n    <column name=\"last_name\" type=\"varchar\" size=\"128\" required=\"true\"/>\n  </table>\n</database>`\n};\n\nexamples.timestample = {\n    label: 'Timestample Behavior',\n    php: `$book = new Book();\n$book->setTitle('Fancy Title');\n$book->save();\n\necho sprintf(\"created at %s\\\\n\", $book->getCreatedAt()->format('c'));\necho sprintf(\"created at %s\\\\n\", $book->getUpdatedAt()->format('c'));\n\nsleep(1);\n$book->setTitle('Another title');\n$book->save();\n\necho \"---\\\\n\";\n\necho sprintf(\"created at %s\\\\n\", $book->getCreatedAt()->format('c'));\necho sprintf(\"created at %s\\\\n\", $book->getUpdatedAt()->format('c'));`,\n    schema: `<database name=\"default\">\n  <table name=\"book\">\n    <column name=\"id\" type=\"integer\" required=\"true\" primaryKey=\"true\" autoIncrement=\"true\"/>\n    <column name=\"title\" type=\"varchar\" size=\"255\" required=\"true\" />\n    <behavior name=\"timestampable\" />\n  </table>\n</database>`\n};\n\nexamples.versionable = {\n    label: 'Versionable Behavior',\n    php: `$book = new Book();\n\n// automatic version increment\n$book->setTitle('War and Peas');\n$book->save();\nvar_dump($book->getVersion()); // 1\n$book->setTitle('War and Peace');\n$book->save();\nvar_dump($book->getVersion()); // 2\n\n// reverting to a previous version\n$book->toVersion(1);\necho $book->getTitle(); // 'War and Peas'\n// saving a previous version creates a new one\n$book->save();\nvar_dump($book->getVersion());  // 3\n\n// checking differences between versions\nprint_r($book->compareVersions(1, 2));\n`,\n    schema: `<database name=\"default\">\n  <table name=\"book\">\n    <column name=\"id\" required=\"true\" primaryKey=\"true\" autoIncrement=\"true\" type=\"integer\" />\n    <column name=\"title\" type=\"varchar\" required=\"true\" />\n    <behavior name=\"versionable\" />\n  </table>\n</database>`\n};\n\n\n\nexport default examples;","export default function toArray(obj) {\n    if (!(obj instanceof Object)) {\n        return obj;\n    }\n\n    return Object.keys(obj).map(function (key) {\n        if ('object' === typeof obj[key]) {\n            return Object.defineProperty(obj[key], '$key', {__proto__: null, value: key});\n        } else {\n            return obj[key];\n        }\n    });\n}","$traceurRuntime.typeof($__placeholder__0)","import angular from './angular';\n\nvar app = angular.module('propelSandbox', ['ngRoute', 'ui.codemirror', 'ui.bootstrap']);\n\nimport MainController from './controller/MainController';\nimport toArray from './filters/toArray';\n\nimport examples from './examples';\n\napp.controller('MainController', MainController);\napp.filter('toArray', () => toArray);\napp.constant('EXAMPLES', examples);\napp.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n\n    $routeProvider\n        .when(window._baseUrl + '/', {})\n        .when(window._baseUrl + '/:fiddleId', {})\n        .when(window._baseUrl + '/example/:exampleId', {});\n}]);\n\napp.run(function($route) {});\n\n// copy&pasted since maintaincer has no versions tagged and requires angular v1.2\napp.directive('uiLadda', ['$timeout', function($timeout) {\n    return {\n        link: function(scope, element, attrs) {\n            var ladda = window.Ladda.create(element[0]);\n            scope.$watch(attrs.uiLadda, function(newVal) {\n                if (angular.isNumber(newVal)) {\n                    if (newVal >= 0 && newVal < 1) {\n                        if (!ladda.isLoading()) {\n                            ladda.start();\n                            $timeout(function() {\n                                ladda.setProgress(newVal);\n                            }, 300);\n                        }\n                        else {\n                            ladda.setProgress(newVal);\n                        }\n                    }\n                    else {\n                        if (ladda.isLoading()) {\n                            ladda.stop();\n                        }\n                    }\n                }\n                else {\n                    if (newVal) {\n                        if (!ladda.isLoading()) {\n                            ladda.start();\n                        }\n                    }\n                    else {\n                        if (ladda.isLoading()) {\n                            ladda.stop();\n                        }\n                    }\n                }\n            }, true);\n        }\n    };\n}]);","System.get($__placeholder__0)","System.get($__placeholder__0 +'')"]}